package com.kosmo.ex;

public class S05Float {
    /*
---

## ✅ 수업 내용 요약: `float`와 `double`

### 1. 자바의 실수형 데이터 타입

* 자바는 실수를 표현하기 위해 **2가지 타입** 사용

  * `float` (4byte): `3.14f`, `3.14F`
  * `double` (8byte): `3.14` (기본 실수 타입)

### 2. 기본 타입이 `double`인 이유

* `float`는 표현 범위가 작고 정밀도가 떨어짐 (23비트 가수부)
* `double`은 더 넓은 범위, 높은 정밀도 (52비트 가수부)

### 3. 실수는 과학적 표기법으로 출력됨

* 예: `2.147483647E9`는 `2147483647`과 같음
* 큰 수를 넣으면 `E+지수` 형태로 출력됨

### 4. 실수는 **지수부 + 가수부** 구조로 저장됨

* float는 4바이트: 1비트 부호 + 8비트 지수 + 23비트 가수
* double은 8바이트: 1비트 부호 + 11비트 지수 + 52비트 가수

### 5. 정밀도 문제

* `float`는 소수점 아래 6\~7자리까지 정확
* `double`은 약 15\~17자리까지 정확

### 6. 부동소수점의 반올림

* 표현할 수 없는 수는 잘라지거나 반올림됨
* float에 너무 큰 수를 넣으면 오차가 발생함

### 7. `MAX_EXPONENT` & `MAX_VALUE`

* `Float.MAX_EXPONENT = 127` → 최대 2^127
* `Float.MAX_VALUE ≈ 3.4028235E38`
* `Double.MAX_EXPONENT = 1023` → 최대 2^1023
* `Double.MAX_VALUE ≈ 1.7976931348623157E308`

---

## 🧪 실습/퀴즈 문제 (총 10문제)

### 🔹 \[기본 개념 확인]

**1. 자바에서 기본 실수 타입은 무엇인가? 왜 그렇게 지정되어 있는가?**
    float , double (숫자의 크기에 따라서)

**2. 다음 중 `float`으로 올바르게 선언된 것은?** B번
A. `float a = 3.14;`
B. `float a = 3.14f;`
C. `float a = 3.14d;`
D. `float a = "3.14";`

**3. `double`과 `float`의 가수부 비트 수는 각각 몇 비트인가?
      23비트, 52비트-->d왜??

**4. 과학적 표기법 `2.1474836E9`는 정수로 쓰면 어떤 수인가?
     2147483600

**5. `Float.MAX_EXPONENT`는 어떤 의미이며, 값은 얼마인가?
   2의 127승 , 1.7x10의38승

---

### 🔹 \[출력 및 코드 이해 문제]

**6. 다음 코드를 실행했을 때 출력되는 형태는?
    C번

```java
float f = 123456789012345678901234567890f;
System.out.println(f);
```

A. 그대로 출력됨
B. 에러 발생
C. 반올림되어 `E+지수` 형태로 출력됨
D. 무한대 출력

---

**7. 아래 코드에서 오류가 발생하지 않는 변수 선언은? B번

```java
double d = 123456789012345678901234567890f;
```

A. 오류 발생 (float이 커서 double 못 받음)
B. 오류 없음 (float은 double로 자동 형변환됨) // double 데이터 타입은 float 보다 큰 실수 이기 때문에 float 데이터를
C. float을 double에 넣으려면 캐스팅 필요
D. double은 float보다 작다

---

### 🔹 \[응용 및 사고력 문제]

**8. float에서 2147483647을 대입한 뒤 출력하면 `2.1474836E9`로 나오는데, 왜 정수가 아닌 `E` 형태로 출력되는가?
     모든 자릿수를 표현할수 없어서 가독성을 위해


**9. 다음 중 실수형 계산에서 정밀도 오차가 가장 클 가능성이 높은 상황은? B번

A. `double a = 3.14 + 0.000000000000001;`
B. `float b = 1000000000 + 0.1f;`
C. `double c = 1.0 / 3.0;`
D. `float d = 1.0f;`

---

**10. `System.out.println(d*d*d*d);` 같은 연산에서 `float`과 `double`의 결과 차이가 나는 이유는 무엇인가?
      소수점자릿수에 대한 정밀도 차이

---

*/


}

